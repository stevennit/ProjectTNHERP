

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <meta name="description" content="" />
    <meta name="author" content="" />
    <title>@ViewData["Title"] - Administration</title>

    <!-- Font Awesome -->
    <link rel="stylesheet" href="../plugins/fontawesome-free/css/all.min.css">
    <!-- Ionicons -->
    <link rel="stylesheet" href="https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css">
    <!-- overlayScrollbars -->
    <link rel="stylesheet" href="../dist/css/adminlte.min.css">
    <!-- Google Font: Source Sans Pro -->
    <link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700" rel="stylesheet">
    <link href="../Style/site.css" rel="stylesheet" />


    @RenderSection("Css",required :false)

</head>
<body class="sb-nav-fixed">
    <!-- Site wrapper -->
    <div class="wrapper">

        <!-- Navbar -->
        @await Html.PartialAsync("~/Views/Shared/CustomLayout/_Header.cshtml")
        <!-- /.navbar -->
        <!-- Main Sidebar Container -->
        @await Html.PartialAsync("~/Views/Shared/CustomLayout/_SideMenu.cshtml")

        <!-- Content Wrapper. Contains page content -->
        <div class="content-wrapper">
            @if (TempData["AlertMessage"] != null)
            {
                <div class="alert @TempData["AlertType"] hide" role="alert">
                    @TempData["AlertMessage"]
                </div>
            }
            @RenderBody()
        </div>
        <!-- /.content-wrapper -->

        <footer class="main-footer">
            <div class="float-right d-none d-sm-block">
                <b>Version</b> 3.0.4
            </div>
            <strong>Copyright &copy; 2014-2019 <a href="http://adminlte.io">AdminLTE.io</a>.</strong> All rights
            reserved.
        </footer>

        <!-- Control Sidebar -->
        <aside class="control-sidebar control-sidebar-dark">
            <!-- Control sidebar content goes here -->
        </aside>
        <!-- /.control-sidebar -->
        @await Html.PartialAsync("/Views/Chat/Index.cshtml")
    </div>
    <!-- ./wrapper -->
    <!-- jQuery -->
    <script src="../plugins/jquery/jquery.min.js"></script>
    <!-- Bootstrap 4 -->
    <script src="../plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
    <!-- AdminLTE App -->
    <script src="../dist/js/adminlte.min.js"></script>
    <!-- AdminLTE for demo purposes -->
    <script src="../dist/js/demo.js"></script>

    @RenderSection("Scripts", required: false)

    <script src="../microsoft/signalr/dist/browser/signalr.js"></script>

    <script type="text/javascript">
        "use strict";

        var connection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();

        //Disable send button until connection is established
        document.getElementById("sendButton").disabled = true;

        connection.on("ReceiveMessage", function (user, message) {
            var li = document.createElement("li");

            document.getElementById("messagesList1").appendChild(li);
            // We can assign user-supplied strings to an element's textContent because it
            // is not interpreted as markup. If you're assigning in any other way, you
            // should be aware of possible script injection concerns.
            li.textContent = `${user} says ${message}`;
            //li.textContent =
            //    `<div class="direct-chat-msg">`
            //        + `<div class="direct-chat-infos clearfix">`
            //            + `<span class="direct-chat-name float-left">${user}</span>`
            //            + `<span class="direct-chat-timestamp float-right">23 Jan 2:00 pm</span>`
            //        + `</div>`
            //        + `<img class="direct-chat-img" src="../dist/img/user1-128x128.jpg" alt="Message User Image">`
            //        + `<div class="direct-chat-text">`
            //        + `${message}`
            //        + `</div>`
            //    + `/div>`
            // ;
        });

        connection.start().then(function () {
            document.getElementById("sendButton").disabled = false;
        }).catch(function (err) {
            return console.error(err.toString());
        });

        document.getElementById("sendButton").addEventListener("click", function (event) {
            var user = document.getElementById("userInput").value;
            var message = document.getElementById("messageInput").value;
            connection.invoke("SendMessage", user, message).catch(function (err) {
                return console.error(err.toString());
            });
            event.preventDefault();
        });
    </script>

</body>
</html>