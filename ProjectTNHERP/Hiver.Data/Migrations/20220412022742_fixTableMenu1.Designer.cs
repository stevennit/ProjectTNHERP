// <auto-generated />
using System;
using Hiver.Data.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hiver.Data.Migrations
{
    [DbContext(typeof(HiverDbContext))]
    [Migration("20220412022742_fixTableMenu1")]
    partial class fixTableMenu1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Hiver.Data.Entities.AppRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ControllerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("8d04dce2-969a-435d-bba4-df3f325983dc"),
                            ActionName = "GetAllPaging",
                            ConcurrencyStamp = "d4992de3-2243-4d36-8252-eaf6e1ce2e8b",
                            ControllerName = "Users",
                            Description = "Tài khoản - Xem tất cả tài khoản",
                            Name = "admin"
                        },
                        new
                        {
                            Id = new Guid("44694fab-619c-4bcc-a8a1-4247a17905f5"),
                            ActionName = "GetById",
                            ConcurrencyStamp = "3e1cb968-f534-4daf-8d78-3a52d55628ae",
                            ControllerName = "Users",
                            Description = "Tài khoản - Xem chi tiết tài khoản",
                            Name = "admin"
                        },
                        new
                        {
                            Id = new Guid("80b0a1ac-d287-4ba3-92c4-51cbcea55920"),
                            ActionName = "admin",
                            ConcurrencyStamp = "7d9e996f-5dd7-482a-b376-90758d671a36",
                            ControllerName = "Register",
                            Description = "Tài khoản - Đăng ký tài khoản",
                            Name = "admin"
                        },
                        new
                        {
                            Id = new Guid("2629553d-758a-460b-92cf-5c34b76a97a7"),
                            ActionName = "Update",
                            ConcurrencyStamp = "8f7df327-02db-4cd0-b664-26a3770b1d58",
                            ControllerName = "Users",
                            Description = "Tài khoản - Cập nhập tài khoản",
                            Name = "admin"
                        },
                        new
                        {
                            Id = new Guid("7feb5851-4244-4538-a6bd-3b98c18afeee"),
                            ActionName = "admin",
                            ConcurrencyStamp = "5fe29536-0363-4b66-89f4-fd118d3c06dd",
                            ControllerName = "Delete",
                            Description = "Tài khoản - Xóa tài khoản",
                            Name = "admin"
                        });
                });

            modelBuilder.Entity("Hiver.Data.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("69bd714f-9576-45ba-b5b7-f00649be00de"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "52569db3-7a74-4fc6-847e-0d48c0a98d4b",
                            Dob = new DateTime(2020, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Nguyễn",
                            LastName = "Admin",
                            LockoutEnabled = false,
                            NormalizedEmail = "admin@gmail.com",
                            NormalizedUserName = "admin",
                            PasswordHash = "AQAAAAEAACcQAAAAEKZozGu5hMX4gEDYysvlFYPx4Cyb+Kiz3fj3maaU6wg1olN2Uc9BNdEO1ZlLFrBX2A==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        },
                        new
                        {
                            Id = new Guid("a3335a51-c19b-4ec8-9dec-39ef33e69bf7"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3d0a12e0-748d-4854-b070-e43b2289c644",
                            Dob = new DateTime(2020, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "it@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Nguyễn",
                            LastName = "It",
                            LockoutEnabled = false,
                            NormalizedEmail = "it@gmail.com",
                            NormalizedUserName = "it",
                            PasswordHash = "AQAAAAEAACcQAAAAENYEW4fBaDCPuJ/iTcJjb0M3iqWDauu085FmmCriT5EacjpsQfx0xNUUAJ6i6IcC5g==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "it"
                        },
                        new
                        {
                            Id = new Guid("171f3098-762c-4b02-85c5-a687f6601de4"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "fe7cae9b-016e-4d16-82b6-3e16ca274844",
                            Dob = new DateTime(2020, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "kho@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Nguyễn",
                            LastName = "Kho",
                            LockoutEnabled = false,
                            NormalizedEmail = "kho@gmail.com",
                            NormalizedUserName = "kho",
                            PasswordHash = "AQAAAAEAACcQAAAAEFoSlpCWCcs/HMoyWArHuV0bEM9zFlG0Uj/c8WVKp5lVUVUtAU5y8vbUq9j2z5UAIQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "kho"
                        });
                });

            modelBuilder.Entity("Hiver.Data.Entities.KnifeMold", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Column")
                        .HasColumnType("int");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Detail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Height")
                        .HasColumnType("float");

                    b.Property<Guid?>("IdKnifeMoldCategory")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifyBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Row")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<double>("Width")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("IdKnifeMoldCategory");

                    b.ToTable("KnifeMolds", (string)null);
                });

            modelBuilder.Entity("Hiver.Data.Entities.KnifeMoldCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ModifyBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.ToTable("KnifeMoldCategories", (string)null);
                });

            modelBuilder.Entity("Hiver.Data.Entities.KnifeMoldImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Caption")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<Guid>("IdTable")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdTable");

                    b.ToTable("KnifeMoldImages", (string)null);
                });

            modelBuilder.Entity("Hiver.Data.Entities.LSX", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifyBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LSXs", (string)null);
                });

            modelBuilder.Entity("Hiver.Data.Entities.Menu", b =>
                {
                    b.Property<int>("MenuID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuID"), 1L, 1);

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("IconClass")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IconNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("bit");

                    b.Property<string>("MenuName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("MenuOrder")
                        .HasColumnType("int");

                    b.Property<int>("MenuVisible")
                        .HasColumnType("int");

                    b.Property<int?>("ParentID")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("MenuID");

                    b.ToTable("Menus", (string)null);

                    b.HasData(
                        new
                        {
                            MenuID = 1,
                            IsVisible = true,
                            MenuName = "Trang Chính",
                            MenuVisible = 1,
                            ParentID = -1,
                            Url = "/"
                        },
                        new
                        {
                            MenuID = 2,
                            IsVisible = true,
                            MenuName = "Kho",
                            MenuVisible = 2,
                            ParentID = -1,
                            Url = "/"
                        },
                        new
                        {
                            MenuID = 3,
                            IsVisible = true,
                            MenuName = "Nguyên Liệu",
                            MenuVisible = 3,
                            ParentID = 2,
                            Url = "/Store"
                        },
                        new
                        {
                            MenuID = 4,
                            IsVisible = true,
                            MenuName = "Thành Phẩm",
                            MenuVisible = 4,
                            ParentID = 2,
                            Url = "/Product"
                        },
                        new
                        {
                            MenuID = 5,
                            IsVisible = true,
                            MenuName = "Kinh Doanh",
                            MenuVisible = 4,
                            ParentID = -1,
                            Url = "/Sale"
                        },
                        new
                        {
                            MenuID = 6,
                            IsVisible = true,
                            MenuName = "Khách Hàng",
                            MenuVisible = 5,
                            ParentID = -1,
                            Url = "/Customer"
                        },
                        new
                        {
                            MenuID = 7,
                            IsVisible = true,
                            MenuName = "Nhà Cung Cấp",
                            MenuVisible = 4,
                            ParentID = -1,
                            Url = "/Supplier"
                        });
                });

            modelBuilder.Entity("Hiver.Data.Entities.OrderSell", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Detail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("IdPartnerCategory")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifyBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.ToTable("OrderSells", (string)null);
                });

            modelBuilder.Entity("Hiver.Data.Entities.Partner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyTaxCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Detail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DoB")
                        .HasColumnType("Date");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<Guid?>("IdPartnerCategory")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Mobile")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ModifyBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("PartnerCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Tel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PartnerCategoryId");

                    b.ToTable("Partners", (string)null);
                });

            modelBuilder.Entity("Hiver.Data.Entities.PartnerCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyTaxCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DoB")
                        .HasColumnType("Date");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Image")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Mobile")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifyBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.ToTable("PartnerCategories", (string)null);
                });

            modelBuilder.Entity("Hiver.Data.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Detail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Height")
                        .HasColumnType("float");

                    b.Property<string>("ModifyBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Symbol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ViewCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<double>("Width")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Products", (string)null);
                });

            modelBuilder.Entity("Hiver.Data.Entities.ProductAndProductCategory", b =>
                {
                    b.Property<Guid?>("IdProduct")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdProductCategory")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdProduct", "IdProductCategory");

                    b.HasIndex("IdProductCategory");

                    b.ToTable("ProductAndProductCategories", (string)null);
                });

            modelBuilder.Entity("Hiver.Data.Entities.ProductCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Image")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ModifyBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.ToTable("ProductCategories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("f9cb0cac-5219-42f7-8182-a7b01d122c4b"),
                            Name = "Tem Loại 1",
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("fee35eb7-a414-4ec1-8ce0-7d11fc10ff3d"),
                            Name = "Tem Loại 2",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Hiver.Data.Entities.ProductImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Caption")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<Guid>("IdTable")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdTable");

                    b.ToTable("ProductImages", (string)null);
                });

            modelBuilder.Entity("Hiver.Data.Entities.Production", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Core")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DateEnd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Depreciation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid?>("KnifeMoldId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LSXId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifyBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OrderSellId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Qty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("QtyRequest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("KnifeMoldId");

                    b.HasIndex("LSXId");

                    b.HasIndex("OrderSellId");

                    b.HasIndex("ProductId");

                    b.ToTable("Productions", (string)null);
                });

            modelBuilder.Entity("Hiver.Data.Entities.ProductionStock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProductionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Qty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("StockId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductionId");

                    b.HasIndex("StockId");

                    b.ToTable("ProductionStocks", (string)null);
                });

            modelBuilder.Entity("Hiver.Data.Entities.Stock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Detail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("IdStockCategory")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifyBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Symbol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdStockCategory");

                    b.ToTable("Stocks", (string)null);
                });

            modelBuilder.Entity("Hiver.Data.Entities.StockCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Image")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ModifyBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.ToTable("StockCategories", (string)null);
                });

            modelBuilder.Entity("Hiver.Data.Entities.StockImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Caption")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<Guid>("IdTable")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdTable");

                    b.ToTable("StockImages", (string)null);
                });

            modelBuilder.Entity("Hiver.Data.Entities.Unit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Units", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AppUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("AppUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AppUserTokens", (string)null);
                });

            modelBuilder.Entity("Hiver.Data.Entities.KnifeMold", b =>
                {
                    b.HasOne("Hiver.Data.Entities.KnifeMoldCategory", "KnifeMoldCategory")
                        .WithMany("KnifeMold")
                        .HasForeignKey("IdKnifeMoldCategory")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("KnifeMoldCategory");
                });

            modelBuilder.Entity("Hiver.Data.Entities.KnifeMoldImage", b =>
                {
                    b.HasOne("Hiver.Data.Entities.KnifeMold", "KnifeMold")
                        .WithMany("KnifeMoldImages")
                        .HasForeignKey("IdTable")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KnifeMold");
                });

            modelBuilder.Entity("Hiver.Data.Entities.Partner", b =>
                {
                    b.HasOne("Hiver.Data.Entities.PartnerCategory", "PartnerCategory")
                        .WithMany("Partner")
                        .HasForeignKey("PartnerCategoryId");

                    b.Navigation("PartnerCategory");
                });

            modelBuilder.Entity("Hiver.Data.Entities.ProductAndProductCategory", b =>
                {
                    b.HasOne("Hiver.Data.Entities.Product", "Product")
                        .WithMany("ProductAndProductCategories")
                        .HasForeignKey("IdProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hiver.Data.Entities.ProductCategory", "ProductCategory")
                        .WithMany("ProductAndProductCategories")
                        .HasForeignKey("IdProductCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("ProductCategory");
                });

            modelBuilder.Entity("Hiver.Data.Entities.ProductImage", b =>
                {
                    b.HasOne("Hiver.Data.Entities.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("IdTable")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Hiver.Data.Entities.Production", b =>
                {
                    b.HasOne("Hiver.Data.Entities.KnifeMold", null)
                        .WithMany("Productions")
                        .HasForeignKey("KnifeMoldId");

                    b.HasOne("Hiver.Data.Entities.LSX", null)
                        .WithMany("Productions")
                        .HasForeignKey("LSXId");

                    b.HasOne("Hiver.Data.Entities.OrderSell", "OrderSell")
                        .WithMany("Productions")
                        .HasForeignKey("OrderSellId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Hiver.Data.Entities.Product", null)
                        .WithMany("Productions")
                        .HasForeignKey("ProductId");

                    b.Navigation("OrderSell");
                });

            modelBuilder.Entity("Hiver.Data.Entities.ProductionStock", b =>
                {
                    b.HasOne("Hiver.Data.Entities.Production", null)
                        .WithMany("ProductionStocks")
                        .HasForeignKey("ProductionId");

                    b.HasOne("Hiver.Data.Entities.Stock", null)
                        .WithMany("ProductionStocks")
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("Hiver.Data.Entities.Stock", b =>
                {
                    b.HasOne("Hiver.Data.Entities.StockCategory", "StockCategory")
                        .WithMany("Stocks")
                        .HasForeignKey("IdStockCategory");

                    b.Navigation("StockCategory");
                });

            modelBuilder.Entity("Hiver.Data.Entities.StockImage", b =>
                {
                    b.HasOne("Hiver.Data.Entities.Stock", "Stock")
                        .WithMany("StockImages")
                        .HasForeignKey("IdTable")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("Hiver.Data.Entities.KnifeMold", b =>
                {
                    b.Navigation("KnifeMoldImages");

                    b.Navigation("Productions");
                });

            modelBuilder.Entity("Hiver.Data.Entities.KnifeMoldCategory", b =>
                {
                    b.Navigation("KnifeMold");
                });

            modelBuilder.Entity("Hiver.Data.Entities.LSX", b =>
                {
                    b.Navigation("Productions");
                });

            modelBuilder.Entity("Hiver.Data.Entities.OrderSell", b =>
                {
                    b.Navigation("Productions");
                });

            modelBuilder.Entity("Hiver.Data.Entities.PartnerCategory", b =>
                {
                    b.Navigation("Partner");
                });

            modelBuilder.Entity("Hiver.Data.Entities.Product", b =>
                {
                    b.Navigation("ProductAndProductCategories");

                    b.Navigation("ProductImages");

                    b.Navigation("Productions");
                });

            modelBuilder.Entity("Hiver.Data.Entities.ProductCategory", b =>
                {
                    b.Navigation("ProductAndProductCategories");
                });

            modelBuilder.Entity("Hiver.Data.Entities.Production", b =>
                {
                    b.Navigation("ProductionStocks");
                });

            modelBuilder.Entity("Hiver.Data.Entities.Stock", b =>
                {
                    b.Navigation("ProductionStocks");

                    b.Navigation("StockImages");
                });

            modelBuilder.Entity("Hiver.Data.Entities.StockCategory", b =>
                {
                    b.Navigation("Stocks");
                });
#pragma warning restore 612, 618
        }
    }
}
