// <auto-generated />
using System;
using Hiver.Data.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hiver.Data.Migrations
{
    [DbContext(typeof(HiverDbContext))]
    [Migration("20220302054825_FixData")]
    partial class FixData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Hiver.Data.Entities.AppRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ControllerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("8d04dce2-969a-435d-bba4-df3f325983dc"),
                            ActionName = "GetAllPaging",
                            ConcurrencyStamp = "e330990f-757c-45cb-8756-676128370bd3",
                            ControllerName = "Users",
                            Description = "Tài khoản - Xem tất cả tài khoản",
                            Name = "admin"
                        },
                        new
                        {
                            Id = new Guid("44694fab-619c-4bcc-a8a1-4247a17905f5"),
                            ActionName = "GetById",
                            ConcurrencyStamp = "168b7034-c199-4867-8501-4ce475062bd1",
                            ControllerName = "Users",
                            Description = "Tài khoản - Xem chi tiết tài khoản",
                            Name = "admin"
                        },
                        new
                        {
                            Id = new Guid("80b0a1ac-d287-4ba3-92c4-51cbcea55920"),
                            ActionName = "admin",
                            ConcurrencyStamp = "6996017e-75a3-4320-9401-cebb8cc882d5",
                            ControllerName = "Register",
                            Description = "Tài khoản - Đăng ký tài khoản",
                            Name = "admin"
                        },
                        new
                        {
                            Id = new Guid("2629553d-758a-460b-92cf-5c34b76a97a7"),
                            ActionName = "Update",
                            ConcurrencyStamp = "35cbe7e5-4a1f-42d6-9b9d-40e67d7370ab",
                            ControllerName = "Users",
                            Description = "Tài khoản - Cập nhập tài khoản",
                            Name = "admin"
                        },
                        new
                        {
                            Id = new Guid("7feb5851-4244-4538-a6bd-3b98c18afeee"),
                            ActionName = "admin",
                            ConcurrencyStamp = "1ac3251a-9798-4cae-ae00-c229ed6782fe",
                            ControllerName = "Delete",
                            Description = "Tài khoản - Xóa tài khoản",
                            Name = "admin"
                        });
                });

            modelBuilder.Entity("Hiver.Data.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("69bd714f-9576-45ba-b5b7-f00649be00de"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "faa81d5e-ff94-4864-b4a4-3144938a8b1b",
                            Dob = new DateTime(2020, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Nguyễn",
                            LastName = "Admin",
                            LockoutEnabled = false,
                            NormalizedEmail = "admin@gmail.com",
                            NormalizedUserName = "admin",
                            PasswordHash = "AQAAAAEAACcQAAAAEHivmYWRW/ZrrKTZbSQ1RvWEl03kXvtPzQFveEejHU3DqMCRxAyjgKdrqJ3wIUzUDA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        },
                        new
                        {
                            Id = new Guid("a3335a51-c19b-4ec8-9dec-39ef33e69bf7"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a60426cf-a006-4226-a77c-880c33013ca2",
                            Dob = new DateTime(2020, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "it@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Nguyễn",
                            LastName = "It",
                            LockoutEnabled = false,
                            NormalizedEmail = "it@gmail.com",
                            NormalizedUserName = "it",
                            PasswordHash = "AQAAAAEAACcQAAAAEGrxUMZcRLSXxUmiaBauMIxW8F1UBCVeZuhlJjoJQbPK5s+rZAA9y7sBj4CzfBVVVw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "it"
                        },
                        new
                        {
                            Id = new Guid("171f3098-762c-4b02-85c5-a687f6601de4"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "eb404d4d-9402-40f2-9d97-65b5d57f845f",
                            Dob = new DateTime(2020, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "kho@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Nguyễn",
                            LastName = "Kho",
                            LockoutEnabled = false,
                            NormalizedEmail = "kho@gmail.com",
                            NormalizedUserName = "kho",
                            PasswordHash = "AQAAAAEAACcQAAAAEGouHXTKoX6dqYoh8bcyjDA59rjt1lbLVBKl9z4bwLyMtnvdWZPnlFxDQlqzXehatw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "kho"
                        });
                });

            modelBuilder.Entity("Hiver.Data.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Detail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DoB")
                        .HasColumnType("Date");

                    b.Property<string>("Email")
                        .HasColumnType("xml");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<int?>("IdCustomerCompany")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Mobile")
                        .HasColumnType("xml");

                    b.Property<string>("ModifyBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.HasIndex("IdCustomerCompany");

                    b.ToTable("Customers", (string)null);
                });

            modelBuilder.Entity("Hiver.Data.Entities.CustomerCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("xml");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DoB")
                        .HasColumnType("Date");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Image")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Mobile")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifyBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.ToTable("CustomerCompanies", (string)null);
                });

            modelBuilder.Entity("Hiver.Data.Entities.KnifeMold", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Column")
                        .HasColumnType("int");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Detail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Height")
                        .HasColumnType("float");

                    b.Property<int?>("IdKnifeMoldCategory")
                        .HasColumnType("int");

                    b.Property<string>("ModifyBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Row")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<double>("Width")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("IdKnifeMoldCategory");

                    b.ToTable("KnifeMolds", (string)null);
                });

            modelBuilder.Entity("Hiver.Data.Entities.KnifeMoldCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ModifyBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.ToTable("KnifeMoldCategories", (string)null);
                });

            modelBuilder.Entity("Hiver.Data.Entities.KnifeMoldImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Caption")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<int>("IdTable")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdTable");

                    b.ToTable("KnifeMoldImages", (string)null);
                });

            modelBuilder.Entity("Hiver.Data.Entities.KnifeMoldUsing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("DateUsingEnd")
                        .IsRequired()
                        .HasColumnType("Date");

                    b.Property<DateTime?>("DateUsingStart")
                        .IsRequired()
                        .HasColumnType("Date");

                    b.Property<int>("IdProductionDetail")
                        .HasColumnType("int");

                    b.Property<int?>("UserUsingEnd")
                        .HasColumnType("int");

                    b.Property<int?>("UserUsingStart")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdProductionDetail");

                    b.ToTable("KnifeMoldUsings", (string)null);
                });

            modelBuilder.Entity("Hiver.Data.Entities.Menu", b =>
                {
                    b.Property<int>("MenuID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuID"), 1L, 1);

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("IconClass")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IconNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("bit");

                    b.Property<string>("MenuName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("MenuOrder")
                        .HasColumnType("int");

                    b.Property<int>("MenuVisible")
                        .HasColumnType("int");

                    b.Property<int?>("ParentID")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("MenuID");

                    b.ToTable("Menus", (string)null);

                    b.HasData(
                        new
                        {
                            MenuID = 1,
                            IsVisible = true,
                            MenuName = "Trang Chính",
                            MenuVisible = 1,
                            ParentID = -1,
                            Url = "/"
                        },
                        new
                        {
                            MenuID = 2,
                            IsVisible = true,
                            MenuName = "Kho",
                            MenuVisible = 2,
                            ParentID = -1,
                            Url = "/"
                        },
                        new
                        {
                            MenuID = 3,
                            IsVisible = true,
                            MenuName = "Nguyên Liệu",
                            MenuVisible = 3,
                            ParentID = 2,
                            Url = "/"
                        },
                        new
                        {
                            MenuID = 4,
                            IsVisible = true,
                            MenuName = "Thành Phẩm",
                            MenuVisible = 4,
                            ParentID = 2,
                            Url = "/"
                        },
                        new
                        {
                            MenuID = 5,
                            IsVisible = true,
                            MenuName = "Kinh Doanh",
                            MenuVisible = 5,
                            ParentID = -1,
                            Url = "/"
                        });
                });

            modelBuilder.Entity("Hiver.Data.Entities.OrderBy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Detail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdSupplier")
                        .HasColumnType("int");

                    b.Property<string>("ModifyBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.HasIndex("IdSupplier");

                    b.ToTable("OrderBies", (string)null);
                });

            modelBuilder.Entity("Hiver.Data.Entities.OrderByDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("IdOrderBy")
                        .HasColumnType("int");

                    b.Property<int>("IdStock")
                        .HasColumnType("int");

                    b.Property<int?>("KnifeMoldId")
                        .HasColumnType("int");

                    b.Property<string>("ModifyBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderById")
                        .HasColumnType("int");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<int?>("StockId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KnifeMoldId");

                    b.HasIndex("OrderById");

                    b.HasIndex("StockId");

                    b.ToTable("OrderByDetails", (string)null);
                });

            modelBuilder.Entity("Hiver.Data.Entities.OrderByDetailAndProductionDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("IdOrderByDetail")
                        .HasColumnType("int");

                    b.Property<int>("IdProductionDetail")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdOrderByDetail");

                    b.HasIndex("IdProductionDetail");

                    b.ToTable("OrderByDetailAndProductionDetails", (string)null);
                });

            modelBuilder.Entity("Hiver.Data.Entities.OrderSell", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Detail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdCustomer")
                        .HasColumnType("int");

                    b.Property<string>("ModifyBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.HasIndex("IdCustomer");

                    b.ToTable("OrderSells", (string)null);
                });

            modelBuilder.Entity("Hiver.Data.Entities.OrderSellDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateDelivery")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("IdOrderSell")
                        .HasColumnType("int");

                    b.Property<int>("IdProduct")
                        .HasColumnType("int");

                    b.Property<string>("ModifyBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.HasIndex("IdOrderSell");

                    b.HasIndex("IdProduct");

                    b.ToTable("OrderSellDetails", (string)null);
                });

            modelBuilder.Entity("Hiver.Data.Entities.OrderSellDetailAndProductionDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("IdOrderSellDetail")
                        .HasColumnType("int");

                    b.Property<int>("IdProductionDetail")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdOrderSellDetail");

                    b.HasIndex("IdProductionDetail");

                    b.ToTable("OrderSellDetailAndProductionDetails", (string)null);
                });

            modelBuilder.Entity("Hiver.Data.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Detail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Height")
                        .HasColumnType("float");

                    b.Property<string>("ModifyBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Symbol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ViewCount")
                        .HasColumnType("int");

                    b.Property<double>("Width")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Products", (string)null);
                });

            modelBuilder.Entity("Hiver.Data.Entities.ProductAndProductCategory", b =>
                {
                    b.Property<int>("IdProduct")
                        .HasColumnType("int");

                    b.Property<int>("IdProductCategory")
                        .HasColumnType("int");

                    b.HasKey("IdProduct", "IdProductCategory");

                    b.HasIndex("IdProductCategory");

                    b.ToTable("ProductAndProductCategories", (string)null);
                });

            modelBuilder.Entity("Hiver.Data.Entities.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Image")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ModifyBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.ToTable("ProductCategories", (string)null);
                });

            modelBuilder.Entity("Hiver.Data.Entities.ProductImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Caption")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<int>("IdTable")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdTable");

                    b.ToTable("ProductImages", (string)null);
                });

            modelBuilder.Entity("Hiver.Data.Entities.Production", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ModifyBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserManager")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Productions", (string)null);
                });

            modelBuilder.Entity("Hiver.Data.Entities.ProductionDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndWork")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Expanded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("IdProduction")
                        .HasColumnType("int");

                    b.Property<string>("ModifyBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PercentComplete")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("QtyComplate")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartWork")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<bool>("Summary")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("UserUsing")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdProduction");

                    b.ToTable("ProductionDetails", (string)null);
                });

            modelBuilder.Entity("Hiver.Data.Entities.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Detail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdStockCategory")
                        .HasColumnType("int");

                    b.Property<string>("ModifyBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Symbol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdStockCategory");

                    b.ToTable("Stocks", (string)null);
                });

            modelBuilder.Entity("Hiver.Data.Entities.StockCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Image")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ImageMore")
                        .HasColumnType("xml");

                    b.Property<string>("ModifyBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.ToTable("StockCategories", (string)null);
                });

            modelBuilder.Entity("Hiver.Data.Entities.StockImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Caption")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<int>("IdTable")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdTable");

                    b.ToTable("StockImages", (string)null);
                });

            modelBuilder.Entity("Hiver.Data.Entities.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Detail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DoB")
                        .HasColumnType("Date");

                    b.Property<string>("Email")
                        .HasColumnType("xml");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<int?>("IdSupplierCompany")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("xml");

                    b.Property<string>("Mobile")
                        .HasColumnType("xml");

                    b.Property<string>("ModifyBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.HasIndex("IdSupplierCompany");

                    b.ToTable("Suppliers", (string)null);
                });

            modelBuilder.Entity("Hiver.Data.Entities.SupplierCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("xml");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateWorkEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateWorkFirst")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DoB")
                        .HasColumnType("Date");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Image")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Mobile")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifyBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.ToTable("SupplierCompanies", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AppUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("AppUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AppUserTokens", (string)null);
                });

            modelBuilder.Entity("Hiver.Data.Entities.Customer", b =>
                {
                    b.HasOne("Hiver.Data.Entities.CustomerCompany", "CustomerCompany")
                        .WithMany("Customer")
                        .HasForeignKey("IdCustomerCompany")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("CustomerCompany");
                });

            modelBuilder.Entity("Hiver.Data.Entities.KnifeMold", b =>
                {
                    b.HasOne("Hiver.Data.Entities.KnifeMoldCategory", "KnifeMoldCategory")
                        .WithMany("KnifeMold")
                        .HasForeignKey("IdKnifeMoldCategory")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("KnifeMoldCategory");
                });

            modelBuilder.Entity("Hiver.Data.Entities.KnifeMoldImage", b =>
                {
                    b.HasOne("Hiver.Data.Entities.KnifeMold", "KnifeMold")
                        .WithMany("KnifeMoldImages")
                        .HasForeignKey("IdTable")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KnifeMold");
                });

            modelBuilder.Entity("Hiver.Data.Entities.KnifeMoldUsing", b =>
                {
                    b.HasOne("Hiver.Data.Entities.ProductionDetail", "ProductionDetail")
                        .WithMany("KnifeMoldUsings")
                        .HasForeignKey("IdProductionDetail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductionDetail");
                });

            modelBuilder.Entity("Hiver.Data.Entities.OrderBy", b =>
                {
                    b.HasOne("Hiver.Data.Entities.Supplier", "Supplier")
                        .WithMany("OrderBies")
                        .HasForeignKey("IdSupplier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Hiver.Data.Entities.OrderByDetail", b =>
                {
                    b.HasOne("Hiver.Data.Entities.KnifeMold", null)
                        .WithMany("OrderByDetails")
                        .HasForeignKey("KnifeMoldId");

                    b.HasOne("Hiver.Data.Entities.OrderBy", "OrderBy")
                        .WithMany("OrderByDetails")
                        .HasForeignKey("OrderById");

                    b.HasOne("Hiver.Data.Entities.Stock", "Stock")
                        .WithMany("OrderByStocks")
                        .HasForeignKey("StockId");

                    b.Navigation("OrderBy");

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("Hiver.Data.Entities.OrderByDetailAndProductionDetail", b =>
                {
                    b.HasOne("Hiver.Data.Entities.OrderByDetail", "OrderByDetail")
                        .WithMany("OrderByDetailAndProductionDetails")
                        .HasForeignKey("IdOrderByDetail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hiver.Data.Entities.ProductionDetail", "ProductionDetail")
                        .WithMany("OrderByDetailAndProductionDetails")
                        .HasForeignKey("IdProductionDetail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderByDetail");

                    b.Navigation("ProductionDetail");
                });

            modelBuilder.Entity("Hiver.Data.Entities.OrderSell", b =>
                {
                    b.HasOne("Hiver.Data.Entities.Customer", "Customer")
                        .WithMany("OrderSells")
                        .HasForeignKey("IdCustomer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Hiver.Data.Entities.OrderSellDetail", b =>
                {
                    b.HasOne("Hiver.Data.Entities.OrderSell", "OrderSell")
                        .WithMany("OrderSellDetails")
                        .HasForeignKey("IdOrderSell")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hiver.Data.Entities.Product", "Product")
                        .WithMany("OrderSellDetails")
                        .HasForeignKey("IdProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderSell");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Hiver.Data.Entities.OrderSellDetailAndProductionDetail", b =>
                {
                    b.HasOne("Hiver.Data.Entities.OrderSellDetail", "OrderSellDetail")
                        .WithMany("OrderSellDetailAndProductionDetails")
                        .HasForeignKey("IdOrderSellDetail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hiver.Data.Entities.ProductionDetail", "ProductionDetail")
                        .WithMany("OrderSellDetailAndProductionDetails")
                        .HasForeignKey("IdProductionDetail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderSellDetail");

                    b.Navigation("ProductionDetail");
                });

            modelBuilder.Entity("Hiver.Data.Entities.ProductAndProductCategory", b =>
                {
                    b.HasOne("Hiver.Data.Entities.Product", "Product")
                        .WithMany("ProductAndProductCategories")
                        .HasForeignKey("IdProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hiver.Data.Entities.ProductCategory", "ProductCategory")
                        .WithMany("ProductAndProductCategories")
                        .HasForeignKey("IdProductCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("ProductCategory");
                });

            modelBuilder.Entity("Hiver.Data.Entities.ProductImage", b =>
                {
                    b.HasOne("Hiver.Data.Entities.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("IdTable")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Hiver.Data.Entities.ProductionDetail", b =>
                {
                    b.HasOne("Hiver.Data.Entities.Production", "Production")
                        .WithMany("ProductionDetails")
                        .HasForeignKey("IdProduction")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Production");
                });

            modelBuilder.Entity("Hiver.Data.Entities.Stock", b =>
                {
                    b.HasOne("Hiver.Data.Entities.StockCategory", "StockCategory")
                        .WithMany("Stocks")
                        .HasForeignKey("IdStockCategory");

                    b.Navigation("StockCategory");
                });

            modelBuilder.Entity("Hiver.Data.Entities.StockImage", b =>
                {
                    b.HasOne("Hiver.Data.Entities.Stock", "Stock")
                        .WithMany("StockImages")
                        .HasForeignKey("IdTable")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("Hiver.Data.Entities.Supplier", b =>
                {
                    b.HasOne("Hiver.Data.Entities.SupplierCompany", "SupplierCompany")
                        .WithMany("Suppliers")
                        .HasForeignKey("IdSupplierCompany");

                    b.Navigation("SupplierCompany");
                });

            modelBuilder.Entity("Hiver.Data.Entities.Customer", b =>
                {
                    b.Navigation("OrderSells");
                });

            modelBuilder.Entity("Hiver.Data.Entities.CustomerCompany", b =>
                {
                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Hiver.Data.Entities.KnifeMold", b =>
                {
                    b.Navigation("KnifeMoldImages");

                    b.Navigation("OrderByDetails");
                });

            modelBuilder.Entity("Hiver.Data.Entities.KnifeMoldCategory", b =>
                {
                    b.Navigation("KnifeMold");
                });

            modelBuilder.Entity("Hiver.Data.Entities.OrderBy", b =>
                {
                    b.Navigation("OrderByDetails");
                });

            modelBuilder.Entity("Hiver.Data.Entities.OrderByDetail", b =>
                {
                    b.Navigation("OrderByDetailAndProductionDetails");
                });

            modelBuilder.Entity("Hiver.Data.Entities.OrderSell", b =>
                {
                    b.Navigation("OrderSellDetails");
                });

            modelBuilder.Entity("Hiver.Data.Entities.OrderSellDetail", b =>
                {
                    b.Navigation("OrderSellDetailAndProductionDetails");
                });

            modelBuilder.Entity("Hiver.Data.Entities.Product", b =>
                {
                    b.Navigation("OrderSellDetails");

                    b.Navigation("ProductAndProductCategories");

                    b.Navigation("ProductImages");
                });

            modelBuilder.Entity("Hiver.Data.Entities.ProductCategory", b =>
                {
                    b.Navigation("ProductAndProductCategories");
                });

            modelBuilder.Entity("Hiver.Data.Entities.Production", b =>
                {
                    b.Navigation("ProductionDetails");
                });

            modelBuilder.Entity("Hiver.Data.Entities.ProductionDetail", b =>
                {
                    b.Navigation("KnifeMoldUsings");

                    b.Navigation("OrderByDetailAndProductionDetails");

                    b.Navigation("OrderSellDetailAndProductionDetails");
                });

            modelBuilder.Entity("Hiver.Data.Entities.Stock", b =>
                {
                    b.Navigation("OrderByStocks");

                    b.Navigation("StockImages");
                });

            modelBuilder.Entity("Hiver.Data.Entities.StockCategory", b =>
                {
                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("Hiver.Data.Entities.Supplier", b =>
                {
                    b.Navigation("OrderBies");
                });

            modelBuilder.Entity("Hiver.Data.Entities.SupplierCompany", b =>
                {
                    b.Navigation("Suppliers");
                });
#pragma warning restore 612, 618
        }
    }
}
